<Window x:Class="ElectricField.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Electric Field" Height="796" Width="811" WindowStyle="ThreeDBorderWindow" WindowStartupLocation="CenterScreen" ResizeMode="CanMinimize" Name="MainAppWindow" Background="#FF030303" Icon="/ElectricField;component/Images/EFIcon.png" xmlns:my="clr-namespace:ElectricField.Controls" Loaded="WindowMotherLoaded" Closing="MainAppWindowClosing">
    <Grid Name="motherGrid">
        <Menu Height="23" Name="mnuMain" VerticalAlignment="Top">
            <MenuItem Header="File">
                <MenuItem Header="Restart" Click="MnuItemRestartClick" />
                <MenuItem Name="MnuDeleteDummy" Header="Delete All Dummy Points" Click="MnuDummyDeleterClick" IsEnabled="False"/>
                <Separator />
                <MenuItem Header="Exit Application" Click="MenuItemExitClick" />
            </MenuItem>
            <MenuItem Header="Graph">
                <MenuItem Header="Distance">
                    <MenuItem Header="Charge/Charge" Click="MnuChargeChargeGraphClick"/>
                </MenuItem>
                <MenuItem Header="Velocity"/>
                <MenuItem Header="Acceleration"/>
            </MenuItem>
            <MenuItem Header="Solver">
                <MenuItem Header="Single Charge Solver" Click="MunItemSingleSolverClick"/>
                <Separator />
                <MenuItem Header="Charge Solver" Click="MunItemSolverClick"/>
                <MenuItem Header="Quick Solver" Click="BtnQuickSolveClick"/>
            </MenuItem>
            <MenuItem Header="Tools">
                <MenuItem Header="Add Positive Charge" Click="AddPositive"/>
                <MenuItem Header="Add Negative Charge" Click="AddNegative" />
                <MenuItem Header="Add Free Charge" Click="AddNewFreeChargeClick" />
                <MenuItem Header="Add Surface" Click="BtnAddSurfaceClick" />
                <Separator />
                <MenuItem Header="Draw Field Lines" Click="BtnDrawFieldLinesClick" />
                <Separator />
                <MenuItem Header="Quick Actions">
                    <MenuItem Header="Generate Image(Gray8)" Click="GenerateGray8BitmapClick"/>
                    <MenuItem Header="Generate Image(Rgba64)" Click="GenerateBitmapRgb24Click"/>
                </MenuItem>
                
            </MenuItem>
            <MenuItem Header="Windows">
                <MenuItem Header="Field Outline" Click="MnuItemFieldOutlineClick" Name="mnuItemFieldOutline" IsCheckable="False" />
                <MenuItem Header="Force at Desired Position" Click="MnuItemForeAtDesiredPositionClick"  />
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem Header="About" Click="MnuItemAboutClick"/>
            </MenuItem>
        </Menu>
        <Button Content="Add Positive Charge" Margin="12,29,0,0" Cursor="Hand" HorizontalAlignment="Left" Width="130" Height="30" VerticalAlignment="Top" Name="btnAddPositivechg" Click="AddPositive" Foreground="White" BorderBrush="White">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Background="#FF0000" CornerRadius="4">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="DarkRed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button Content="Add Negative Charge" Margin="148,29,0,0" Cursor="Hand" HorizontalAlignment="Left" Width="135" Height="30" VerticalAlignment="Top" Name="btnAddNegativechg" Click="AddNegative" Foreground="White">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Background="#0000FF" CornerRadius="4">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="DarkBlue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Border  Height="628" HorizontalAlignment="Left" Margin="12,72,0,0" VerticalAlignment="Top" Width="776" BorderBrush="#FF414141" BorderThickness="1">
            <Grid Height="628" Name="gridField" Width="776" Background="Black"></Grid>
        </Border>
        <Button Content="Quick Solve" Cursor="Hand" Height="30" HorizontalAlignment="Right" Margin="0,715,12,0" Name="button1" VerticalAlignment="Top" Width="127" Click="BtnQuickSolveClick">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="#FFE2E2E2" CornerRadius="4" Name="Border">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter Property="Border.Background" TargetName="Border" Value="Gray" />
                            <Setter Property="Control.Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter Property="Border.Background" TargetName="Border" Value="Black" />
                            <Setter Property="Control.Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button Content="Draw Field Lines" Cursor="Hand" Height="30" Margin="0,715,145,0" Name="btnDrawLines" VerticalAlignment="Top" Click="BtnDrawFieldLinesClick" HorizontalAlignment="Right" Width="137">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Orchid" CornerRadius="4" Name="Border">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter Property="Border.Background" TargetName="Border" Value="DarkRed" />
                            <Setter Property="Control.Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter Property="Border.Background" TargetName="Border" Value="Red" />
                            <Setter Property="Control.Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button Content="Add Free Charge" Cursor="Hand" Foreground="Black" Height="30" HorizontalAlignment="Left" Margin="289,29,0,0" Name="BtnAddFreeCharge" VerticalAlignment="Top" Width="132" Click="AddNewFreeChargeClick">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Khaki" CornerRadius="4" Name="Border">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter Property="Border.Background" TargetName="Border" Value="Yellow" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter Property="Border.Background" TargetName="Border" Value="Wheat" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button Content="Start Simulation" Cursor="Hand" Foreground="White" Height="30" HorizontalAlignment="Left" Margin="12,715,0,0" Name="button3" VerticalAlignment="Top" Width="121" Click="BtnstartSimulationClick">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="YellowGreen" CornerRadius="4" Name="Border">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter Property="Border.Background" TargetName="Border" Value="Gray" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter Property="Border.Background" TargetName="Border" Value="DarkBlue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button Content="Stop" Cursor="Hand" Foreground="White" Height="30" HorizontalAlignment="Left" Margin="139,715,0,0" Name="button4" VerticalAlignment="Top" Width="49" Click="BtnStopSimulationClik">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="OrangeRed" CornerRadius="4" Name="Border">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter Property="Border.Background" TargetName="Border" Value="Gray" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter Property="Border.Background" TargetName="Border" Value="DarkBlue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button Content="Add Surface" Cursor="Hand" Foreground="White" Height="30" HorizontalAlignment="Left" Margin="427,29,0,0" Name="BtnAddSurface" VerticalAlignment="Top" Width="150" Click="BtnAddSurfaceClick">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="DarkMagenta" CornerRadius="4" Name="Border">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter Property="Border.Background" TargetName="Border" Value="Gray" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter Property="Border.Background" TargetName="Border" Value="DarkBlue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
    </Grid>
    
    
</Window>
