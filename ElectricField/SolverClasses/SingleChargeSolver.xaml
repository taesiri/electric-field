<Window x:Class="ElectricField.SingleChargeSolver"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="SingleChargeSolver" Height="421" Width="466" Background="#FF313131" WindowStyle="ThreeDBorderWindow" ResizeMode="CanMinimize" xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" WindowStartupLocation="CenterScreen" xmlns:my="clr-namespace:ElectricField.Controls">
    <Grid>
        <Border BorderBrush="Silver" BorderThickness="2" Height="277" Margin="12,12,12,0" Name="bordermother" VerticalAlignment="Top">
            <Grid Name="gridField" Background="Black">
                <my:PositiveCharge HorizontalAlignment="Left" x:Name="positiveCharge1" VerticalAlignment="Top" IsEnabled="False" Panel.ZIndex="1" />
            </Grid>
        </Border>
        <Label Content="Charge Type" HorizontalAlignment="Left" Margin="12,0,0,49" Name="label1" Foreground="White" Height="28" VerticalAlignment="Bottom" />
        <ComboBox Margin="111,0,0,51" Name="comboBox1" HorizontalAlignment="Left" Width="74" Height="23" VerticalAlignment="Bottom" SelectedIndex="0">
            <ComboBoxItem Content="Positive" />
            <ComboBoxItem Content="Negative" />
        </ComboBox>
        <Label Content="Charge Value" Foreground="White" HorizontalAlignment="Left" Margin="12,0,0,11" Name="label2" Height="28" VerticalAlignment="Bottom" />
        <Button Content="Close" Cursor="Hand" Foreground="Black" Height="27" HorizontalAlignment="Right" Margin="0,0,14,13" Name="btnClose" VerticalAlignment="Bottom" Width="83" Click="BtnCloseClick">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Cyan" CornerRadius="4" Name="Border">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter Property="Border.Background" TargetName="Border" Value="DarkCyan" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter Property="Border.Background" TargetName="Border" Value="LightBlue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <xctk:IntegerUpDown Height="26" HorizontalAlignment="Left" Margin="111,343,0,0" Name="integerUDChargeValue" VerticalAlignment="Top" Width="74" Text="1" Value="1" Minimum="1" Maximum="10" ValueChanged="IntegerUdChargeValueValueChanged" />
    </Grid>
</Window>
